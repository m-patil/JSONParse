//import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.*;
import java.util.*;

public class ReadJSONFile
{

    @SuppressWarnings("unchecked")
    public static void main(String[] args)
    {
        Map<String,JSONObject> unique = new HashMap<>();
        Map<String,JSONObject> dupes = new HashMap<>();
        //JSONArray usernames = new JSONArray();

        String line = null;
        JSONObject obj;
        //ParseException {
        //}
        try
        {

            // FileReader reads text files in the default encoding.
            FileReader fileReader = new FileReader("C:\\Users\\mihir\\Desktop\\username_sample.json");

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = new BufferedReader(fileReader);

            while((line = bufferedReader.readLine()) != null) {
                obj = (JSONObject) new JSONParser().parse(line);
                //json.add(obj);
                String name = (String) obj.get("name");
                JSONObject json = new JSONObject();
                if (unique.containsKey(name)) {
                    if (dupes.containsKey(name)) {
                        json = appendJsonObject(dupes, obj, name, json);
                        dupes.replace(name,dupes.get(name),json);
                    } else {
                        json = appendJsonObject(unique, obj, name, json);
                        dupes.put(name,json);
                    }
                } else {
                    unique.put(name, obj);
                }


            }
            // Always close files.
            bufferedReader.close();
            /*
            Scanner scanner = new Scanner(new File("C:\\Users\\mihir\\Desktop\\username_sample.json"));
            //List<JSONObject> jsonArray = new ArrayList<>();
            while (scanner.hasNext()) {
                JSONObject obj = (JSONObject) new JSONParser().parse(scanner.nextLine());
                //jsonArray.add(obj);
                String name = (String) obj.get("name");
                JSONObject json = new JSONObject();
                if (unique.containsKey(name)) {
                    if (dupes.containsKey(name)) {
                        json = appendJsonObject(dupes, obj, name, json);
                        dupes.replace(name,dupes.get(name),json);
                    } else {
                        json = appendJsonObject(unique, obj, name, json);
                        dupes.put(name,json);
                    }
                } else {
                    unique.put(name, obj);
                }
            }
            */
            //FileReader fileReader = new FileReader("C:\\Users\\mihir\\Desktop\\username_sample.json");

            //BufferedReader reader = new BufferedReader(fileReader);
            /*
            while((line = reader.readLine()) != null) {
                obj = (JSONObject) new JSONParser().parse(line);
                usernames.add(obj);
            }
            reader.close();

            for(JSONObject un : jsonArray) {
                //JSONObject un = (JSONObject) uname;
                String name = (String) un.get("name");
                JSONObject json = new JSONObject();
                if (unique.containsKey(name)) {
                    if (dupes.containsKey(name)) {
                        json = appendJsonObject(dupes, un, name, json);
                        dupes.replace(name,dupes.get(name),json);
                    } else {
                        json = appendJsonObject(unique, un, name, json);
                        dupes.put(name,json);
                    }
                } else {
                    unique.put(name, un);
                }
            }
            */
        } catch (IOException | ParseException e) {
            e.printStackTrace();
        }

        JSONObject objout = new JSONObject();
        objout.putAll(dupes);

        try {
            FileWriter file = new FileWriter("C:\\Users\\mihir\\Desktop\\output.json");
            file.write(objout.toString());
            file.flush();
            file.close();

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static JSONObject appendJsonObject(Map<String, JSONObject> dupes, JSONObject un, String name, JSONObject json) {
        String acc2 = dupes.get(name).toString() + un.toString();
        JSONParser parser = new JSONParser();
        try {
            json = (JSONObject) parser.parse(acc2);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        return json;
    }
}

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.*;
import java.util.*;

public class ReadJSONFile
{

    @SuppressWarnings("unchecked")
    public static void main(String[] args)
    {
        Map<String,JSONArray> unique = new HashMap<>();
        Map<String,JSONArray> dupes = new HashMap<>();
        JSONArray udupe = new JSONArray();

        String line = null;
        JSONObject obj;
        //ParseException {
        //}
        try
        {

            FileReader fileReader = new FileReader("C:\\Users\\mihir\\Desktop\\username_sample.json");

            BufferedReader bufferedReader = new BufferedReader(fileReader);

            /*
            String acc2 = dupes.get(name).toString() + un.toString();
            JSONParser parser = new JSONParser();
            try {
                json = (JSONObject) parser.parse(acc2);
            } catch (ParseException e) {
                e.printStackTrace();
            }
            return json;*/

            while((line = bufferedReader.readLine()) != null) {
                obj = (JSONObject) new JSONParser().parse(line);
                String name = (String) obj.get("name");
                //JSONObject json = new JSONObject();
                //JSONArray temp = new JSONArray();
                if (unique.containsKey(name)) {
                    if (dupes.containsKey(name)) {
                        //temp = dupes.get(name);
                        udupe = dupes.get(name);
                        udupe.add(obj);
                        //json = appendJsonObject(dupes, obj, name, json);
                        dupes.replace(name,udupe);
                    } else {
                        udupe = unique.get(name);
                        udupe.add(obj);
                        //json = appendJsonObject(unique, obj, name, json);
                        dupes.put(name,udupe);
                    }
                } else {
                    udupe.add(obj);
                    unique.put(name, udupe);
                }
                udupe = new JSONArray();

            }

            bufferedReader.close();


        } catch (IOException | ParseException e) {
            e.printStackTrace();
        }

        JSONObject objout = new JSONObject();
        objout.putAll(dupes);

        try {
            FileWriter file = new FileWriter("C:\\Users\\mihir\\Desktop\\output.json");
            file.write(objout.toString());
            file.flush();
            file.close();

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
/*
    private static JSONObject appendJsonObject(Map<String, JSONObject> dupes, JSONObject un, String name, JSONObject json) {
        String acc2 = dupes.get(name).toString() + un.toString();
        JSONParser parser = new JSONParser();
        try {
            json = (JSONObject) parser.parse(acc2);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        return json;
    }*/
}